#########################################################################
# Title:         Bizbox: Remote | Feeder Tasks                         #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/jeremiahg7/Bizbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Feeder | Import 'feeder.service'
  ansible.builtin.template:
    src: feeder.service.j2
    dest: /etc/systemd/system/feeder.service
    mode: '0755'
    force: "{{ true if ('mounts_override' in ansible_run_tags) else false }}"

- name: Feeder | Systemd daemon-reload 'feeder.service'
  ansible.builtin.systemd:
    name: feeder.service
    state: stopped
    enabled: false
    daemon_reload: true

- name: Feeder | Get list of Rclone remotes in config
  ansible.builtin.shell: rclone listremotes
  become: true
  become_user: "{{ user.name }}"
  register: rclone_config_remotes

- name: Feeder | Set 'rclone_config_remotes' variable
  ansible.builtin.set_fact:
    rclone_config_remotes: "{{ (rclone_config_remotes.stdout).split() }}"

- name: Feeder | Set 'feeder_remote_is_configured' variable
  ansible.builtin.set_fact:
    feeder_remote_is_configured: "{{ 'feeder:' in rclone_config_remotes }}"

- name: Feeder | Tasks when Rclone remote is configured
  block:

    - name: "Feeder | Test Rclone remote 'feeder:'"
      ansible.builtin.shell: |
        rclone lsd 'feeder:' \
          --user-agent='{{ user_agent }}'
      become: true
      become_user: "{{ user.name }}"
      register: rclone_test
      failed_when: (rclone_test.rc | int > 5)

    - name: Feeder | Set 'rclone_remote_is_working' variable
      ansible.builtin.set_fact:
        feeder_remote_is_working: "{{ rclone_test.rc | int == 0 }}"

    - name: Feeder | Start 'feeder.service'
      ansible.builtin.systemd:
        name: feeder.service
        state: started
        enabled: true
      when: feeder_remote_is_working

    - name: "Feeder | Display error message when Rclone remote is not working properly"
      ansible.builtin.fail:
        msg:
          - "Rclone remote 'feeder:' is not working properly."
          - "{{ rclone_test.stderr }}"
      when: not feeder_remote_is_working
      ignore_errors: true

  when: feeder_remote_is_configured

- name: "Feeder | Display error message when Rclone remote is not configured properly"
  ansible.builtin.fail:
    msg:
      - "Rclone remote 'feeder:' is not configured properly."
  when: not feeder_remote_is_configured
  ignore_errors: true

- name: Feeder | Set 'feeder_remote_is_active' variable
  ansible.builtin.set_fact:
    feeder_remote_is_active: "{{ (feeder_remote_is_configured is defined and
                                    feeder_remote_is_configured) and
                                  (feeder_remote_is_working is defined and
                                    feeder_remote_is_working) }}"

#########################################################################
# Title:         Bizbox: Remote | Mount Path Tasks                     #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/jeremiahg7/Bizbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Mount Path | Force unmount '{{ mount_path }}'"
  ansible.builtin.shell: "/bin/umount -f '{{ mount_path }}' 2>/dev/null || :"
  ignore_errors: true

- name: "Mount Path | Check if '{{ mount_path }}' exists"
  ansible.builtin.stat:
    path: "{{ mount_path }}"
  register: mount_path_stat
  ignore_errors: true

- name: "Mount Path | Tasks for '{{ mount_path }}' path"
  block:

    - name: "Mount Path | Remove empty directories in '{{ mount_path }}'"
      ansible.builtin.shell: "find '{{ mount_path }}' -type d -empty -delete"
      ignore_errors: true

    - name: "Mount Path | Recursively find '{{ mount_path }}' files"
      ansible.builtin.find:
        paths: '{{ mount_path }}'
        hidden: true
        recurse: true
      register: mount_path_stat_files
      ignore_errors: true

    - name: "Mount Path | Backup non-empty '{{ mount_path }}' path"
      ansible.builtin.shell: "mv {{ mount_path }} {{ mount_path }}_{{ '%Y-%m-%d_%H.%M.%S' | strftime(ansible_date_time['epoch'] | int) }}"
      ignore_errors: true
      when: (mount_path_stat_files.matched | int > 0)

    - name: "Mount Path | Remove '{{ mount_path }}'"
      ansible.builtin.file:
        path: "{{ mount_path }}"
        state: absent

  when: (mount_path_stat is failed) or (mount_path_stat.stat.exists)

#########################################################################
# Title:         Bizbox: Remote | Service Tasks                        #
# Author(s):     desimaniac, salty                                      #
# URL:           https://github.com/jeremiahg7/Bizbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Services | Check if '{{ _service_file }}' exists"
  ansible.builtin.stat:
    path: "/etc/systemd/system/{{ _service_file }}"
  register: _service_file_status

- name: "Services | Tasks for '{{ _service_file }}'"
  block:

    - name: "Services | Stop and disable existing '{{ _service_file }}'"
      ansible.builtin.systemd:
        name: "{{ _service_file }}"
        state: stopped
        enabled: false
      ignore_errors: true

    - name: "Services | Update credentials in existing '{{ _service_file }}'"
      community.general.ini_file:
        path: "/etc/systemd/system/{{ _service_file }}"
        section: Service
        option: "{{ inner_item.option }}"
        value: "{{ inner_item.value }}"
        state: present
        mode: "0644"
        no_extra_spaces: true
      loop:
        - { option: 'User', value: "{{ user.name }}" }
        - { option: 'Group', value: "{{ user.name }}" }
      loop_control:
        loop_var: inner_item
      when: (_service_file is not regex('.*\.timer'))

    # if applicable
    - name: "Services | Update 'rc-addr' in existing '{{ _service_file }}'"
      ansible.builtin.replace:
        path: "/etc/systemd/system/{{ _service_file }}"
        regexp: "rc-addr=localhost:[0-9]*"
        replace: 'rc-addr=localhost:5572'
      when: (_service_file is not regex('.*\.timer'))

    - name: "Services | Systemd daemon-reload"
      ansible.builtin.systemd:
        daemon_reload: true

  when: _service_file_status.stat.exists

#########################################################################
# Title:         Bizbox: Plex | Preferences Task                       #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/jeremiahg7/Bizbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Preferences | Check if '{{ plex_paths_config_location | basename }}' exists"
  ansible.builtin.stat:
    path: "{{ plex_paths_config_location }}"
  register: preferences_xml

- name: "Preferences | '{{ plex_paths_config_location | basename }}' Tasks"
  block:

    - name: Preferences | Get '{{ plex_paths_config_location | basename }}' XML data
      community.general.xml:
        path: "{{ plex_paths_config_location }}"
        xpath: /Preferences
        content: attribute
      register: preferences_xml_resp
      ignore_errors: true

    - name: "Preferences | Remove '{{ plex_paths_config_location | basename }}' if malformed"
      ansible.builtin.file:
        path: "{{ plex_paths_config_location }}"
        state: absent
      when: (preferences_xml_resp is failed)

    - name: Preferences | Set 'transcoder_path_fix' variable
      ansible.builtin.set_fact:
        transcoder_path_fix: "{{ (preferences_xml_resp is succeeded) and
          (preferences_xml_resp.matches[0].Preferences.TranscoderTempDirectory is defined) and
          (preferences_xml_resp.matches[0].Preferences.TranscoderTempDirectory | trim == '/transcodes') }}"

    - name: "Preferences | Fix 'TranscoderTempDirectory'"
      community.general.xml:
        path: "{{ plex_paths_config_location }}"
        xpath: /Preferences
        attribute: TranscoderTempDirectory
        value: "/transcode"
        state: present
      become: true
      become_user: "{{ user.name }}"
      ignore_errors: true
      when: (transcoder_path_fix)

    - name: Preferences | Set 'plex_server_claimed' variable
      ansible.builtin.set_fact:
        plex_server_claimed: "{{ (preferences_xml_resp is succeeded) and
          (preferences_xml_resp.matches[0].Preferences.PlexOnlineToken is defined) and
          (preferences_xml_resp.matches[0].Preferences.PlexOnlineToken | trim | length > 0) }}"

  when:
    - (preferences_xml.stat.exists)

- name: Preferences | Claim {{ plex_name | title }} Server
  ansible.builtin.import_tasks: "claim_server.yml"
  when:
    - (not preferences_xml.stat.exists) or (preferences_xml.stat.exists and not plex_server_claimed)

##########################################################################
# Title:         Bizbox: Traefik | Default Variables                    #
# Author(s):     RXWatcher, salty                                        #
# URL:           https://github.com/jeremiahg7/Bizbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Basics
################################

traefik_name: traefik

################################
# Config
################################

traefik_trusted_ips: ""
traefik_file_watch: "true"
traefik_x_robots: "none,noarchive,nosnippet,notranslate,noimageindex"

################################
# Paths
################################

traefik_paths_folder: "{{ traefik_name }}"
traefik_paths_location: "{{ server_appdata_path }}/{{ traefik_paths_folder }}"
traefik_paths_acme_config_location: "{{ traefik_paths_location }}/acme.json"
traefik_paths_folders_list:
  - "{{ traefik_paths_location }}"

################################
# Web
################################

traefik_web_subdomain: "{{ traefik.subdomains.dash }}"
traefik_web_domain: "{{ user.domain }}"
traefik_metrics_subdomain: "{{ traefik.subdomains.metrics }}"
traefik_metrics_domain: "{{ user.domain }}"

################################
# Logging
################################

traefik_log: true
traefik_log_level: "ERROR"
traefik_access_log: false
traefik_access_buffer: 100

################################
# DNS
################################

traefik_dns_record: "{{ traefik_web_subdomain }}"
traefik_dns_zone: "{{ traefik_web_domain }}"
traefik_dns_proxy: "{{ dns.proxied }}"
traefik_metrics_dns_record: "{{ traefik_metrics_subdomain }}"
traefik_metrics_dns_zone: "{{ traefik_metrics_domain }}"
traefik_metrics_dns_proxy: "{{ dns.proxied }}"

################################
# Cloudflare IPs
################################

traefik_cloudflare_ips_string: "{{ (traefik_cloudflare_ipv4 + traefik_cloudflare_ipv6) | join('\n') | replace('\n', ',') }}{{ ',' + traefik_trusted_ips if (traefik_trusted_ips | length > 0) else '' }}"

################################
# DNS Provider
################################

traefik_dns_provider_cloudflare_tmp:
  CLOUDFLARE_EMAIL: "{{ cloudflare.email }}"
  CLOUDFLARE_API_KEY: "{{ cloudflare.api }}"

traefik_dns_provider_cloudflare: "{{ traefik_dns_provider_cloudflare_tmp
                                  if cloudflare_is_enabled
                                  else {} }}"

traefik_dns_provider_cloudns:
  CLOUDDNS_CLIENT_ID: "{{ cloudns.client_id }}"
  CLOUDDNS_EMAIL: "{{ cloudns.email }}"
  CLOUDDNS_PASSWORD: "{{ cloudns.password }}"

traefik_dns_provider_duckdns:
  DUCKDNS_TOKEN: "{{ duckdns.token }}"

traefik_dns_provider_godaddy:
  GODADDY_API_KEY: "{{ godaddy.api_key }}"
  GODADDY_API_SECRET: "{{ godaddy.api_secret }}"

traefik_dns_provider_hetzner:
  HETZNER_API_KEY: "{{ hetzner.api_key }}"

traefik_dns_provider_linode:
  LINODE_TOKEN: "{{ linode.token }}"

traefik_dns_provider_namecheap:
  NAMECHEAP_API_USER: "{{ namecheap.api_user }}"
  NAMECHEAP_API_KEY: "{{ namecheap.api_key }}"

traefik_dns_provider_namedotcom:
  NAMECOM_USERNAME: "{{ namedotcom.username }}"
  NAMECOM_API_TOKEN: "{{ namedotcom.api_token }}"
  NAMECOM_SERVER: "{{ namedotcom.server }}"

traefik_dns_provider_netcup:
  NETCUP_CUSTOMER_NUMBER: "{{ netcup.customer_number }}"
  NETCUP_API_KEY: "{{ netcup.api_key }}"
  NETCUP_API_PASSWORD: "{{ netcup.api_password }}"

################################
# Traefik
################################

traefik_traefik_certresolver: "{{ traefik_default_certresolver }}"
traefik_traefik_enabled: true

################################
# Docker
################################

# Container
traefik_docker_container: "{{ traefik_name }}"

# Image
traefik_docker_image_pull: true
traefik_docker_image_tag: "2.9"
traefik_docker_image: "traefik:{{ traefik_docker_image_tag }}"

# Ports
traefik_docker_ports_defaults:
  - "80:80/tcp"
  - "443:443/tcp"
traefik_docker_ports_custom: []
traefik_docker_ports: "{{ traefik_docker_ports_defaults
                          + traefik_docker_ports_custom }}"

# Envs
traefik_docker_envs_default:
  TZ: "{{ tz }}"
traefik_docker_envs_custom: {}
traefik_docker_envs: "{{ traefik_docker_envs_default
                         | combine(lookup('vars', 'traefik_dns_provider_' + traefik_challenge_provider, default={}))
                         | combine(traefik_docker_envs_custom) }}"

# Commands
traefik_docker_commands_default:
  - "--global.sendanonymoususage=false"
  - "--providers.file.directory=/etc/traefik"
  - "--providers.file.watch={{ traefik_file_watch }}"
  - "--providers.docker=true"
  - "--providers.docker.exposedbydefault=false"
  - "--entrypoints.web.address=:80"
  - "--entrypoints.web.forwardedheaders.trustedIPs={{ traefik_cloudflare_ips_string }}"
  - "--entrypoints.web.proxyprotocol.trustedIPs={{ traefik_cloudflare_ips_string }}"
  - "--entrypoints.websecure.address=:443"
  - "--entrypoints.websecure.forwardedheaders.trustedIPs={{ traefik_cloudflare_ips_string }}"
  - "--entrypoints.websecure.proxyprotocol.trustedIPs={{ traefik_cloudflare_ips_string }}"
  - "--entrypoints.websecure.http.tls.certResolver={{ traefik_default_certresolver }}"
  - "--api.dashboard=true"
  - "--api=true"
  - "--log={{ traefik_log }}"
  - "--log.level={{ traefik_log_level }}"
  - "--log.filepath=/etc/traefik/traefik.log"
  - "--accesslog={{ traefik_access_log }}"
  - "--accesslog.fields.names.StartUTC=drop"
  - "--accesslog.fields.headers.names.User-Agent=keep"
  - "--accesslog.fields.headers.names.Content-Type=keep"
  - "--accesslog.filepath=/etc/traefik/access.log"
  - "--accesslog.bufferingsize={{ traefik_access_buffer }}"
  - "--certificatesresolvers.cfdns.acme.dnschallenge.provider={{ traefik_challenge_provider }}"
  - "--certificatesresolvers.cfdns.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53"
  - "--certificatesresolvers.cfdns.acme.email={{ user.email }}"
  - "--certificatesresolvers.cfdns.acme.storage=/etc/traefik/acme.json"
  - "--certificatesresolvers.tlsresolver.acme.tlschallenge=true"
  - "--certificatesresolvers.tlsresolver.acme.email={{ user.email }}"
  - "--certificatesresolvers.tlsresolver.acme.storage=/etc/traefik/acme.json"
  - "--certificatesresolvers.httpresolver.acme.httpchallenge.entrypoint=web"
  - "--certificatesresolvers.httpresolver.acme.email={{ user.email }}"
  - "--certificatesresolvers.httpresolver.acme.storage=/etc/traefik/acme.json"
  - "--certificatesresolvers.zerossl.acme.dnschallenge.provider={{ traefik_challenge_provider }}"
  - "--certificatesresolvers.zerossl.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53"
  - "--certificatesresolvers.zerossl.acme.email={{ user.email }}"
  - "--certificatesresolvers.zerossl.acme.caserver=https://acme.zerossl.com/v2/DV90"
  - "--certificatesresolvers.zerossl.acme.eab.kid={{ traefik_zerossl_kid | default('') }}"
  - "--certificatesresolvers.zerossl.acme.eab.hmacencoded={{ traefik_zerossl_hmacencoded | default('') }}"
  - "--certificatesresolvers.zerossl.acme.storage=/etc/traefik/acme.json"
  - "--certificatesresolvers.zerosslhttp.acme.httpchallenge.entrypoint=web"
  - "--certificatesresolvers.zerosslhttp.acme.email={{ user.email }}"
  - "--certificatesresolvers.zerosslhttp.acme.caserver=https://acme.zerossl.com/v2/DV90"
  - "--certificatesresolvers.zerosslhttp.acme.eab.kid={{ traefik_zerossl_kid | default('') }}"
  - "--certificatesresolvers.zerosslhttp.acme.eab.hmacencoded={{ traefik_zerossl_hmacencoded | default('') }}"
  - "--certificatesresolvers.zerosslhttp.acme.storage=/etc/traefik/acme.json"
traefik_docker_commands_google_acme_tmp:
  - "--certificatesresolvers.google.acme.dnschallenge.provider={{ traefik_challenge_provider }}"
  - "--certificatesresolvers.google.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53"
  - "--certificatesresolvers.google.acme.email={{ user.email }}"
  - "--certificatesresolvers.google.acme.caserver=https://dv.acme-v02.api.pki.goog/directory"
  - "--certificatesresolvers.google.acme.eab.kid={{ traefik_google_kid | default('') }}"
  - "--certificatesresolvers.google.acme.eab.hmacencoded={{ traefik_google_hmacencoded | default('') }}"
  - "--certificatesresolvers.google.acme.storage=/etc/traefik/acme.json"
  - "--certificatesresolvers.googlehttp.acme.httpchallenge.entrypoint=web"
  - "--certificatesresolvers.googlehttp.acme.email={{ user.email }}"
  - "--certificatesresolvers.googlehttp.acme.caserver=https://dv.acme-v02.api.pki.goog/directory"
  - "--certificatesresolvers.googlehttp.acme.eab.kid={{ traefik_google_kid | default('') }}"
  - "--certificatesresolvers.googlehttp.acme.eab.hmacencoded={{ traefik_google_hmacencoded | default('') }}"
  - "--certificatesresolvers.googlehttp.acme.storage=/etc/traefik/acme.json"
traefik_docker_commands_google_acme: "{{ traefik_docker_commands_google_acme_tmp
                                      if (traefik_google_kid is defined) and (traefik_google_hmacencoded is defined)
                                      else [] }}"
traefik_docker_commands_metrics_tmp:
  - "--metrics.prometheus=true"
  - "--metrics.prometheus.addentrypointslabels=true"
  - "--metrics.prometheus.addrouterslabels=true"
  - "--metrics.prometheus.addserviceslabels=true"
  - "--metrics.prometheus.manualrouting=true"
traefik_docker_commands_metrics: "{{ traefik_docker_commands_metrics_tmp
                                  if traefik.metrics
                                  else [] }}"
traefik_docker_commands_themepark_plugin_tmp:
  - "--experimental.plugins.themepark.modulename=github.com/packruler/traefik-themepark"
  - "--experimental.plugins.themepark.version=v1.2.2"
traefik_docker_commands_themepark_plugin: "{{ traefik_docker_commands_themepark_plugin_tmp
                                           if global_themepark_plugin_enabled
                                           else [] }}"
traefik_docker_commands_tracing_tmp:
  - "--tracing.serviceName=traefik"
  - "--tracing.spanNameLimit=250"
  - "--tracing.jaeger=true"
  - "--tracing.jaeger.samplingServerURL=http://jaeger:5778/sampling"
  - "--tracing.jaeger.samplingType=const"
  - "--tracing.jaeger.samplingParam=1"
  - "--tracing.jaeger.localAgentHostPort=jaeger:6831"
  - "--tracing.jaeger.gen128Bit"
  - "--tracing.jaeger.propagation=jaeger"
  - "--tracing.jaeger.traceContextHeaderName=uber-trace-id"
  - "--tracing.jaeger.collector.endpoint=http://jaeger:14268/api/traces?format=jaeger.thrift"
traefik_docker_commands_tracing: "{{ traefik_docker_commands_tracing_tmp
                                  if traefik.tracing
                                  else [] }}"
traefik_docker_commands_custom: []
traefik_docker_commands: "{{ traefik_docker_commands_default
                             + traefik_docker_commands_custom
                             + traefik_docker_commands_metrics
                             + traefik_docker_commands_themepark_plugin
                             + traefik_docker_commands_tracing
                             + traefik_docker_commands_google_acme }}"

# Volumes
traefik_docker_volumes_default:
  - "/var/run/docker.sock:/var/run/docker.sock:ro"
  - "{{ traefik_paths_location }}:/etc/traefik"
traefik_docker_volumes_custom: []
traefik_docker_volumes: "{{ traefik_docker_volumes_default
                            + traefik_docker_volumes_custom }}"

# Devices
traefik_docker_devices_default: []
traefik_docker_devices_custom: []
traefik_docker_devices: "{{ traefik_docker_devices_default
                            + traefik_docker_devices_custom }}"

# Hosts
traefik_docker_hosts_default:
  host.docker.internal: "172.19.0.1"
traefik_docker_hosts_custom: []
traefik_docker_hosts: "{{ docker_hosts_common
                          | combine(traefik_docker_hosts_default)
                          | combine(traefik_docker_hosts_custom) }}"

# Labels
traefik_docker_labels_default:
  com.github.bizbox.bizbox_managed: "true"
  traefik.enable: "true"
  traefik.http.routers.traefik-http.rule: "Host(`{{ traefik_web_subdomain }}.{{ traefik_web_domain }}`)"
  traefik.http.routers.traefik-http.entrypoints: "web"
  traefik.http.routers.traefik-http.middlewares: "{{ traefik_default_middleware_http + ',' + traefik_default_sso_middleware
                                                  if (traefik_default_sso_middleware | length > 0)
                                                  else traefik_default_middleware_http }}"
  traefik.http.routers.traefik-http.priority: "20"
  traefik.http.routers.traefik.rule: "Host(`{{ traefik_web_subdomain }}.{{ traefik_web_domain }}`)"
  traefik.http.routers.traefik.entrypoints: "websecure"
  traefik.http.routers.traefik.tls: "true"
  traefik.http.routers.traefik.tls.options: "securetls@file"
  traefik.http.routers.traefik.middlewares: "{{ traefik_default_middleware + ',' + traefik_default_sso_middleware
                                             if (traefik_default_sso_middleware | length > 0)
                                             else traefik_default_middleware }}"
  traefik.http.routers.traefik.priority: "20"
  traefik.http.routers.traefik.service: "api@internal"
  traefik.http.middlewares.traefik-auth.basicauth.usersfile: "/etc/traefik/auth"
  traefik.http.middlewares.gzip.compress: "true"
  traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: "https"
  traefik.http.middlewares.redirect-to-https.redirectscheme.permanent: "true"
  traefik.http.middlewares.authelia.forwardauth.address: "{{ 'http://authelia:9091/api/verify?rd=' + authelia_web_url + '/'
                                                          if authelia_is_master
                                                          else authelia_web_url + '/api/verify?rd=' + authelia_web_url + '/' }}"
  traefik.http.middlewares.authelia.forwardauth.trustForwardHeader: "true"
  traefik.http.middlewares.authelia.forwardauth.authResponseHeaders: "Remote-User, Remote-Groups, Remote-Name, Remote-Email"

traefik_docker_labels_dns_validation:
  traefik.http.routers.traefik.tls.certresolver: "{{ traefik_default_certresolver }}"
  traefik.http.routers.traefik.tls.domains[0].main: "{{ user.domain }}"
  traefik.http.routers.traefik.tls.domains[0].sans: "{{ '*.' + user.domain }}"

traefik_docker_labels_tls_validation:
  traefik.http.routers.traefik.tls.certresolver: "{{ traefik_default_certresolver }}"

traefik_docker_labels_metrics:
  traefik.http.routers.metrics-http.rule: "Host(`{{ traefik_metrics_subdomain }}.{{ traefik_metrics_domain }}`) && Path(`/prometheus`)"
  traefik.http.routers.metrics-http.service: prometheus@internal
  traefik.http.routers.metrics-http.entrypoints: "web"
  traefik.http.routers.metrics-http.middlewares: "traefik-auth,{{ traefik_default_middleware_http }}"
  traefik.http.routers.metrics-http.priority: "20"
  traefik.http.routers.metrics.rule: "Host(`{{ traefik_metrics_subdomain }}.{{ traefik_metrics_domain }}`) && Path(`/prometheus`)"
  traefik.http.routers.metrics.service: prometheus@internal
  traefik.http.routers.metrics.entrypoints: "websecure"
  traefik.http.routers.metrics.tls: "true"
  traefik.http.routers.metrics.tls.options: "securetls@file"
  traefik.http.routers.metrics.middlewares: "traefik-auth,{{ traefik_default_middleware }}"
  traefik.http.routers.metrics.priority: "20"

traefik_docker_labels_custom: {}

traefik_docker_labels_validation: "{{ traefik_docker_labels_dns_validation
                                   if not (traefik_tls)
                                   else traefik_docker_labels_tls_validation }}"

traefik_docker_labels_metrics_temp: "{{ []
                                     if not (traefik.metrics)
                                     else traefik_docker_labels_metrics }}"

traefik_docker_labels: "{{ traefik_docker_labels_default
                           | combine(traefik_docker_labels_custom)
                           | combine(traefik_docker_labels_validation)
                           | combine(traefik_docker_labels_metrics_temp) }}"

# Hostname
traefik_docker_hostname: "{{ traefik_name }}"

# Networks
traefik_docker_networks_alias: "{{ traefik_name }}"
traefik_docker_networks_default: []
traefik_docker_networks_custom: []
traefik_docker_networks: "{{ docker_networks_common
                             + traefik_docker_networks_default
                             + traefik_docker_networks_custom }}"

# Capabilities
traefik_docker_capabilities_default: []
traefik_docker_capabilities_custom: []
traefik_docker_capabilities: "{{ traefik_docker_capabilities_default
                                 + traefik_docker_capabilities_custom }}"

# Security Opts
traefik_docker_security_opts_default: []
traefik_docker_security_opts_custom: []
traefik_docker_security_opts: "{{ traefik_docker_security_opts_default
                                  + traefik_docker_security_opts_custom }}"

# Restart Policy
traefik_docker_restart_policy: always

# State
traefik_docker_state: started

#########################################################################
# Title:         Bizbox: Cloudflare | Variables Task                   #
# Author(s):     desimaniac, salty                                      #
# URL:           https://github.com/jeremiahg7/Bizbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Variables | Set 'bizbox_type' variable
  ansible.builtin.set_fact:
    bizbox_type: "{{ 'bizbox' if ('bizbox' in ansible_run_tags)
      else 'mediabox' if ('mediabox' in ansible_run_tags)
      else 'feederbox' if ('feederbox' in ansible_run_tags)
      else '' }}"

- name: Install tld python package
  ansible.builtin.pip:
    name: tld
    executable: pip3

- name: Get FLD
  ansible.builtin.shell: |
    python3 -c "from tld import get_tld; res = get_tld(\"http://{{ dns_zone | default(user.domain) }}\", as_object=True); print(res.fld)"
  register: fld

# https://github.com/advertine/ansible-cloudflare-purge

- name: Variables | Fetch Cloudflare Zones
  ansible.builtin.uri:
    url: 'https://api.cloudflare.com/client/v4/zones?name={{ fld.stdout }}'
    method: 'GET'
    headers:
      Content-Type: "application/json"
      X-Auth-Email: '{{ cloudflare.email }}'
      X-Auth-Key: '{{ cloudflare.api }}'
    return_content: true
  register: cf_zones

- name: Variables | Set 'cloudflare_zone' Variable
  ansible.builtin.set_fact:
    cloudflare_zone: "{{ cf_zones.json.result[0].id }}"

- name: Variables | Fetch Cloudflare Page Rules
  ansible.builtin.shell: |
    curl -X GET "https://api.cloudflare.com/client/v4/zones/{{ cloudflare_zone }}/pagerules?status=active&order=status&direction=desc&match=all" \
    -H "X-Auth-Email: {{ cloudflare.email }}" \
    -H "X-Auth-Key: {{ cloudflare.api }}" \
    -H "Content-Type: application/json" \
    | jq -r '.result[] | select(.targets[].constraint.value | contains("{{ fld.stdout }}/.well-known")) | .id'
  args:
    warn: false
  register: cf_page_rules

- name: Variables | Set 'cloudflare_page_rules' Variable
  ansible.builtin.set_fact:
    cloudflare_page_rules: "{{ cf_page_rules.stdout_lines }}"

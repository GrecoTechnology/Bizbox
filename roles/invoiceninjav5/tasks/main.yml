#########################################################################
# Title:            Sandbox: InvoiceNinja v5 app                        #
# Author(s):        addbee                                              #
# URL:              https://github.com/jeremiahg7/Sandbox                 #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Check Docker Container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/check_docker_container.yml"
  vars:
    container_name: "{{ user.domain | replace('.','-')+'-mariadb' }}"
  register: result

- name: MariaDB Role
  ansible.builtin.include_role:
    name: mariadb
  when: not result.exists

- name: MariaDB | Create ninja database
  community.mysql.mysql_db:
    name: "{{ mariadb_db_name }}"
    login_host: "{{ user.domain | replace('.','-')+'-mariadb' }}"
    login_user: "root"
    login_password: "{{ mariadb_docker_envs_mysql_root_password }}"
    state: present

- name: Permissions | Create invoiceninja group
  ansible.builtin.group:
    name: invoiceninja
    state: present
    gid: 1500
  ignore_errors: true

- name: Permissions | Add to invoiceninja group
  ansible.builtin.user:
    name: "{{ user.name }}"
    groups: invoiceninja
    append: yes
  ignore_errors: true

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "1500"
    group: "invoiceninja"
    mode: "0775"
  with_items: "{{ lookup('vars', role_name + '_paths_folders_list') }}"

- name: "Settings | Check if in-vhost.conf exists"
  ansible.builtin.stat:
    path: "{{ invoiceninjav5_conf_path }}"
  register: invoiceninjav5_config

- name: "Settings | in-vhost.conf tasks"
  block:
    - name: "Settings | Import in-vhost.conf"
      ansible.builtin.template:
        src: in-vhost.conf.j2
        dest: '{{ invoiceninjav5_conf_path }}'
        owner: "{{ user.name }}"
        group: "invoiceninja"
        mode: 0775
        force: yes
  when: not invoiceninjav5_config.stat.exists

- name: "Execute nginx role"
  ansible.builtin.include_role:
    name: nginx
  vars:
    nginx_docker_image: "nginx:latest"
    nginx_paths_folder: ""
    nginx_paths_folders_list: []
    nginx_web_subdomain: "{{ invoiceninjav5_nginx_web_subdomain }}"
    nginx_web_domain: "{{ invoiceninjav5_nginx_web_domain }}"
    nginx_dns_record: "{{ invoiceninjav5_nginx_dns_record }}"
    nginx_dns_zone: "{{ invoiceninjav5_nginx_dns_zone }}"
    nginx_dns_proxy: "{{ invoiceninjav5_nginx_dns_proxy }}"
    nginx_instances: ["{{ invoiceninjav5_nginx_name }}"]
    nginx_traefik_middleware: "{{ invoiceninjav5_nginx_traefik_middleware }}"
    nginx_traefik_certresolver: "{{ invoiceninjav5_nginx_traefik_certresolver }}"
    nginx_docker_labels_custom:
      traefik.http.middlewares.unpkg.headers.contentSecurityPolicy: "script-src 'self' 'sha256-EENjFVXlTTULOhYtTN/zGOSoEvoN3FVnPeJep9kP1v8=' 'sha256-YNPXVTnq+9TglJW+Zjb+ooe+v0EjUySnyGob/QoS8Tk=' 'sha256-gIADf8IxSPe2KmL5qZWc2iFD96/LdG4JEL6ae8ds8FM=' 'unsafe-eval';"
    nginx_docker_volumes_default:
      - "{{ invoiceninjav5_paths_location }}/in-vhost.conf:/etc/nginx/conf.d/in-vhost.conf:ro"
      - "{{ invoiceninjav5_paths_location }}/public:/var/www/app/public"

- name: Remove existing Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"

- name: Create Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/create_docker_container.yml"

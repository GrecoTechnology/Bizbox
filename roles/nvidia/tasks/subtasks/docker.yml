#########################################################################
# Title:         Bizbox: Nvidia | Docker Tasks                         #
# Author(s):     desimaniac, l3uddz                                     #
# URL:           https://github.com/jeremiahg7/Bizbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Binary | Remove old official repository entry
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    filename: "{{ nvidia_docker_runtime_apt_repo_file }}"
    update_cache: true
    state: absent
  loop: "{{ nvidia_docker_runtime_apt_repo_url_list_old }}"

- name: Docker | Add 'nvidia-container-runtime' APT Repo Key
  ansible.builtin.apt_key:
    url: "{{ nvidia_docker_runtime_apt_key_url }}"
    keyring: /usr/share/keyrings/nvidia.gpg
    state: present

- name: Docker | Add 'nvidia-container-runtime' APT list
  ansible.builtin.apt_repository:
    repo: "{{ item }}"
    filename: "{{ nvidia_docker_runtime_apt_repo_file }}"
    state: present
    mode: 0644
    update_cache: true
  loop: "{{ nvidia_docker_runtime_apt_repo_url_list }}"

- name: Docker | Install 'nvidia-container-runtime'
  ansible.builtin.apt:
    name: "{{ nvidia_docker_runtime_apt_package }}"
    update_cache: true
    state: present

- name: Docker | Populate Service Facts
  ansible.builtin.service_facts:

- name: Docker | Get Docker service state
  ansible.builtin.set_fact:
    docker_service_running: "{{ (services['docker.service'] is defined) and (services['docker.service']['state'] == 'running') }}"

- name: Docker | Gather list of running Docker containers
  ansible.builtin.shell: "docker ps --format '{{ '{{' }} .Names{{ '}}' }}' | xargs echo -n"
  register: docker_running_containers
  ignore_errors: true
  when: (docker_service_running)

- name: Docker | Stop all running Docker containers
  ansible.builtin.shell: "docker stop {{ docker_running_containers.stdout }}"
  ignore_errors: true
  when: (docker_service_running) and (docker_running_containers.stdout | trim | length > 0)

- name: Docker | Stop docker service
  ansible.builtin.systemd:
    name: docker
    state: stopped
  when: (docker_service_running)

# https://github.com/linkernetworks/vortex-installer/blob/master/roles/common/tasks/nvidia-docker.yml
- name: Docker | Add runtime to '/etc/docker/daemon.json'
  ansible.builtin.shell: "{{ nvidia_docker_runtime_docker_daemon_json_jq_command }}"

- name: Docker | Start docker service
  ansible.builtin.systemd:
    name: docker
    state: started
  when: (docker_service_running)

- name: Docker | Re-start all previously running Docker containers
  ansible.builtin.shell: 'docker start {{ docker_running_containers.stdout }}'
  ignore_errors: true
  when: (docker_service_running) and (docker_running_containers.stdout | trim | length > 0)

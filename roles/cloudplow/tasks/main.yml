#########################################################################
# Title:         Bizbox: Cloudplow Role                                #
# Author(s):     l3uddz, desimaniac, salty                              #
# URL:           https://github.com/jeremiahg7/Bizbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Check if Plex instance is defined
  ansible.builtin.set_fact:
    plex_name: "{{ plex_name | default(plex_instances[0]) }}"

- name: Stop Service
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/systemd/stop_service.yml"
  vars:
    _service_name: "{{ cloudplow_service_name }}"

- name: Create directory
  ansible.builtin.file:
    path: "{{ cloudplow_path }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
    recurse: true

- name: Clone project git repo
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/git/clone_git_repo.yml"

- name: Set Python version
  ansible.builtin.set_fact:
    cloudplow_python: "{{ 'python3'
                       if ansible_distribution_version is version('20.04', '==')
                       else 'python3.8' }}"

- name: "Execute Python role"
  ansible.builtin.include_role:
    name: "python"
  vars:
    python_version: "3.8"
  when: ansible_distribution_version is version('22.04', '==')

- name: Check if venv folder exists
  ansible.builtin.stat:
    path: "{{ cloudplow_venv_path }}"
  register: cloudplow_venv_folder

- name: Delete venv folder
  ansible.builtin.file:
    path: "{{ cloudplow_venv_path }}"
    state: absent
  when: cloudplow_venv_folder.stat.exists

- name: Install pip requirements
  ansible.builtin.pip:
    requirements: "{{ cloudplow_requirements_path }}"
    virtualenv_python: "{{ cloudplow_python }}"
    virtualenv: "{{ cloudplow_venv_path }}"
  become: true
  become_user: "{{ user.name }}"

- name: Find pip3 path
  ansible.builtin.find:
    paths: "{{ cloudplow_path }}/venv"
    recurse: true
    patterns: 'pip3'
  register: files

- name: Path
  ansible.builtin.set_fact:
    cloudplow_bin_folder: "{{ files.files[0].path | dirname }}"

- name: Set script as executable
  ansible.builtin.file:
    path: "{{ cloudplow_script_path }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: a+x

- name: Create script alias
  ansible.builtin.template:
    src: cloudplow.sh.j2
    dest: "{{ cloudplow_alias_path }}"
    mode: "0755"
    force: true

- name: Import Settings Task
  ansible.builtin.import_tasks: "subtasks/settings.yml"

- name: Import '{{ cloudplow_service_name }}.service'
  ansible.builtin.template:
    src: cloudplow.service.j2
    dest: "/etc/systemd/system/{{ cloudplow_service_name }}.service"
    mode: "0644"
    force: true

- name: Start service
  ansible.builtin.systemd:
    name: "{{ cloudplow_service_name }}"
    state: started
    enabled: true
    daemon_reload: true

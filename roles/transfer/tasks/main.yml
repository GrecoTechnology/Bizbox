#########################################################################
# Title:         Bizbox: Transfer.sh Role                              #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/jeremiahg7/Bizbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Add DNS record
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/dns/tasker.yml"
  vars:
    dns_record: "{{ lookup('vars', role_name + '_dns_record') }}"
    dns_zone: "{{ lookup('vars', role_name + '_dns_zone') }}"
    dns_proxy: "{{ lookup('vars', role_name + '_dns_proxy') }}"

- name: Remove existing Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"

- name: Create directories
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/directories/create_directories.yml"

- name: Create Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/create_docker_container.yml"

- name: Check if 'transfer' exists
  ansible.builtin.stat:
    path: "/usr/local/bin/transfer"
  register: transfer_binary

- name: Install 'transfer' utility
  block:

    - name: Get latest transfer URL
      ansible.builtin.shell: >-
          curl -s {{ cvm }}https://api.github.com/repos/l3uddz/transfer/releases/latest |
          jq -r ".assets[] | select(.name | test(\"transfer_v[0-9].[0-9].[0-9]_linux_amd64\")) | .browser_download_url"
      args:
        executable: /bin/bash
      register: transfer_download_url
      ignore_errors: true

    - name: Install transfer
      ansible.builtin.get_url:
        url: "{{ transfer_download_url.stdout | default('https://github.com/l3uddz/transfer/releases/download/v1.0.0/transfer_v1.0.0_linux_amd64', true) }}"
        dest: /usr/local/bin/transfer
        mode: 0775
        owner: root
        group: root
        force: true
        validate_certs: false
      ignore_errors: true
      register: x
      until: "x is not failed"
      retries: 5
      delay: 10

    - name: "Get transfer version"
      ansible.builtin.shell: "/usr/local/bin/transfer --version | head -n 1 | awk '{ print $1 }'"
      register: transfer_version
      ignore_errors: true
      when: x is success

    - name: "Display transfer version"
      ansible.builtin.debug:
        msg: "transfer {{ transfer_version.stdout }} installed."
      when: x is success

    - name: "transfer install failed"
      ansible.builtin.debug:
        msg: "transfer install failed."
      when: x is not success

  when: not transfer_binary.stat.exists

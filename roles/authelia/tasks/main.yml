#########################################################################
# Title:         Bizbox: Authelia Role                                 #
# Author(s):     salty                                                  #
# URL:           https://github.com/jeremiahg7/Bizbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Fail if not master"
  ansible.builtin.fail:
    msg: "This server is not set as Authelia master server."
  when: not authelia_is_master

- name: Remove existing Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/remove_docker_container.yml"

- name: "Import Redis Role"
  ansible.builtin.include_role:
    name: redis

- name: Install argon2_cffi python package
  ansible.builtin.pip:
    name: argon2_cffi
    executable: pip3

- name: Add DNS record
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/dns/tasker.yml"
  vars:
    dns_record: "{{ lookup('vars', role_name + '_dns_record') }}"
    dns_zone: "{{ lookup('vars', role_name + '_dns_zone') }}"
    dns_proxy: "{{ lookup('vars', role_name + '_dns_proxy') }}"

- name: Reset Authelia directory
  ansible.builtin.file:
    path: "{{ authelia_paths_location }}"
    state: absent
  when: ('authelia-reset' in ansible_run_tags)

- name: Create directories
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/directories/create_directories.yml"

- name: Check if 'configuration.yml' exists
  ansible.builtin.stat:
    path: "{{ authelia_paths_location }}/configuration.yml"
  register: authelia_config_stat

- name: Check if 'users_database.yml' exists
  ansible.builtin.stat:
    path: "{{ authelia_paths_location }}/users_database.yml"
  register: authelia_user_config_stat

- name: Import default 'configuration.yml'
  ansible.builtin.template:
    src: configuration.yml.j2
    dest: "{{ authelia_paths_location }}/configuration.yml"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0775"
  when: (not authelia_config_stat.stat.exists)

- name: "Generate Password Hash"
  community.docker.docker_container:
    name: authelia-password-hash
    image: "{{ authelia_docker_image }}"
    command: "authelia hash-password '{{ user.pass }}'"
    detach: no
    volumes:
      - "{{ authelia_paths_location }}:/config"
    networks:
      - name: bizbox
    purge_networks: yes
    cleanup: yes
    state: started
  register: authelia_password
  when: (not authelia_user_config_stat.stat.exists)

- name: "Sanitize Password Hash"
  ansible.builtin.shell: "echo '{{ authelia_password.container.Output }}' | sed -n 's/^Password hash: //p'"
  register: authelia_password
  when: (not authelia_user_config_stat.stat.exists)

- name: Import default 'users_database.yml'
  ansible.builtin.template:
    src: users_database.yml.j2
    dest: "{{ authelia_paths_location }}/users_database.yml"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0775"
  when: (not authelia_user_config_stat.stat.exists)

- name: Settings Task
  ansible.builtin.import_tasks: "subtasks/settings.yml"
  when: (authelia_config_stat.stat.exists)

- name: Create Docker container
  ansible.builtin.include_tasks: "{{ resources_tasks_path }}/docker/create_docker_container.yml"

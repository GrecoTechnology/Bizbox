##########################################################################
# Title:         Bizbox: Global Variables                               #
# Author(s):     desimaniac, salty                                       #
# URL:           https://github.com/jeremiahg7/Bizbox                     #
# --                                                                     #
##########################################################################
#                   GNU General Public License v3.0                      #
##########################################################################
---
################################
# Resources
################################

resources_tasks_path: "/srv/git/bizbox/resources/tasks"

################################
# Continuous Integration
################################

continuous_integration: false

################################
# Accounts
################################

cloudflare_is_enabled: "{{ (cloudflare is defined) and
                           (cloudflare is not none) and
                           (cloudflare | trim | length > 0) and
                           (cloudflare.email is defined) and
                           (cloudflare.email is not none) and
                           (cloudflare.email | trim | length > 0) and
                           (cloudflare.api is defined) and
                           (cloudflare.api is not none) and
                           (cloudflare.api | trim | length > 0) }}"

cloudflare_records_enabled: "{{ cloudflare_is_enabled }}"

plex_account_is_enabled: "{{ (plex is defined) and
                             (plex is not none) and
                             (plex | trim | length > 0) and
                             (plex.user is defined) and
                             (plex.user is not none) and
                             (plex.user | trim | length > 0) and
                             (plex.pass is defined) and
                             (plex.pass is not none) and
                             (plex.pass | trim | length > 0) }}"

################################
# Role Conditionals
################################

nzbs_downloads_path_is_defined: "{{ (downloads is defined) and
                                    (downloads is not none) and
                                    (downloads | trim | length > 0) and
                                    (downloads_usenet_path is defined) and
                                    (downloads_usenet_path is not none) and
                                    (downloads_usenet_path | trim | length > 0) }}"

use_nzbs: "{{ nzbs_downloads_path_is_defined }}"

torrents_downloads_path_is_defined: "{{ (downloads is defined) and
                                        (downloads is not none) and
                                        (downloads | trim | length > 0) and
                                        (downloads_torrents_path is defined) and
                                        (downloads_torrents_path is not none) and
                                        (downloads_torrents_path | trim | length > 0) }}"

use_torrents: "{{ torrents_downloads_path_is_defined }}"

feeder_mount_is_enabled: "{{ (mounts is defined) and
                             (mounts is not none) and
                             (mounts | trim | length > 0) and
                             (mounts.feeder is defined) and
                             (mounts.feeder is not none) and
                             (mounts.feeder | trim | length > 0) and
                             (mounts.feeder) }}"

rclone_remote_is_defined: "{{ (rclone is defined) and
                              (rclone is not none) and
                              (rclone | trim | length > 0) and
                              (rclone.remote is defined) and
                              (rclone.remote is not none) and
                              (rclone.remote | trim | length > 0) }}"

use_remote: "{{ feeder_mount_is_enabled or rclone_remote_is_defined }}"

use_nvidia: "{{ gpu.nvidia }}"

################################
# System
################################

server_root_path: "/"

server_appdata_path: "{{ server_root_path | regex_replace('\\/$', '') + '/opt' }}/{{user.domain}}"

################################
# Paths
################################

transcodes_path: "{{ transcodes }}"

downloads_root_path: "{{ downloads }}"

downloads_torrents_path: "{{ downloads }}/torrents"

downloads_usenet_path: "{{ downloads }}/nzbs"

downloads_custom_path: "{{ false
                        if downloads_torrents_path.startswith(downloads_root_path) and downloads_usenet_path.startswith(downloads_root_path)
                        else true }}"

################################
# User
################################

uid: "{{ ansible_local.user[user.name].uid }}"

gid: "{{ ansible_local.user[user.name].gid }}"

vgid: "{{ ansible_local.group.video.gid }}"

rgid: "{{ ansible_local.group.render.gid }}"

dockergid: "{{ ansible_local.group.docker.gid }}"

################################
# Timezone
################################

tz: "{{ system.timezone
     if system is defined and
        system.timezone is defined and
        'auto' not in system.timezone | lower
     else ansible_local.timezone
        if ansible_local is defined and
            ansible_local.timezone is defined and
            ansible_local.timezone | trim | length > 0
        else 'Etc/UTC' }}"

################################
# Network
################################

ip_address_host: "0.0.0.0"

ip_address_localhost: "127.0.0.1"

ip_address_public: "{{ ansible_local.network.ip.public_ip | default(ansible_default_ipv4.address) }}"

ip_address_public_is_valid: "{{ ip_address_public | ansible.utils.ipv4 }}"

ipv6_address_public: "{{ ansible_local.network.ip.public_ipv6 | default(ansible_default_ipv6.address) }}"

ipv6_address_public_is_valid: "{{ ipv6_address_public | ansible.utils.ipv6 }}"

################################
# Reverse Proxy
################################

reverse_proxy_is_enabled: "{{ (user is defined) and
                              (user is not none) and
                              (user | trim | length > 0) and
                              (user.domain is defined) and
                              (user.domain is not none) and
                              (user.domain | trim | length > 0) and
                              (user.email is defined) and
                              (user.email is not none) and
                              (user.email | trim | length > 0) }}"

################################
# Theme
################################

# Options can be found at https://github.com/gilbN/theme.park
global_themepark_theme: organizr
global_themepark_domain: theme-park.dev
global_themepark_plugin_enabled: false

################################
# Authelia
################################

authelia_is_master: "{{ authelia.master | bool }}"

################################
# ZeroSSL
################################

zerossl_is_enabled: "{{ dns.zerossl | bool }}"

################################
# Traefik
################################

traefik_role_var: "{{ lookup('vars', role_name + '_name', default=role_name) }}"

traefik_challenge_provider: "{{ traefik.provider }}"
traefik_default_certprovider: "{{ 'cfdns'
                               if (not dns.zerossl)
                               else 'zerossl' }}"
traefik_default_zerossl_resolver: "{{ 'zerosslhttp' }}"
traefik_default_resolver: "{{ 'httpresolver' if (traefik.http or not traefik.tls) else 'tlsresolver' }}"
traefik_default_certresolver: "{{ traefik_default_certprovider
                               if (not traefik_tls)
                               else (traefik_default_resolver if not zerossl_is_enabled else traefik_default_zerossl_resolver) }}"

traefik_error_pages_enabled: "{{ traefik.error_pages }}"
traefik_error_pages_role_enabled: "{{ lookup('vars', traefik_role_var + '_traefik_error_pages_enabled', default=lookup('vars', role_name + '_traefik_error_pages_enabled', default=False)) }}"
traefik_error_pages_middleware: "{{ 'error-pages-middleware,'
                                 if traefik_error_pages_enabled and traefik_error_pages_role_enabled
                                 else '' }}"

traefik_default_middleware_default: "{{ traefik_error_pages_middleware + 'globalHeaders@file,'+'secureHeaders@file'
                                        + (',gzip'
                                          if (lookup('vars', traefik_role_var + '_traefik_gzip_enabled', default=lookup('vars', role_name + '_traefik_gzip_enabled', default=true)))
                                          else '')
                                        + (',hsts@file'
                                          if (traefik.hsts)
                                          else '') }}"
traefik_default_middleware_custom: ""

traefik_default_middleware: "{{ traefik_default_middleware_default
                                + (',' + traefik_default_middleware_custom
                                  if (not traefik_default_middleware_custom.startswith(',') and traefik_default_middleware_custom | length > 0)
                                  else traefik_default_middleware_custom) }}"

traefik_default_middleware_default_http: "{{ traefik_error_pages_middleware }}globalHeaders@file,redirect-to-https"
traefik_default_middleware_custom_http: ""
traefik_default_middleware_http: "{{ traefik_default_middleware_default_http
                                     + (',' + traefik_default_middleware_custom_http
                                       if (not traefik_default_middleware_custom_http.startswith(',') and traefik_default_middleware_custom_http | length > 0)
                                       else traefik_default_middleware_custom_http)
                                     + (',gzip'
                                       if (lookup('vars', traefik_role_var + '_traefik_gzip_enabled', default=lookup('vars', role_name + '_traefik_gzip_enabled', default=true)))
                                       else '') }}"

traefik_default_sso_middleware: "authelia"

traefik_role_enabled: "{{ lookup('vars', traefik_role_var + '_traefik_enabled', default=lookup('vars', role_name + '_traefik_enabled', default=False)) }}"
traefik_role_api_enabled: "{{ lookup('vars', traefik_role_var + '_traefik_api_enabled', default=lookup('vars', role_name + '_traefik_api_enabled', default=False)) }}"

traefik_tls: "{{ false
              if ((traefik_challenge_provider != 'cloudflare') or cloudflare_is_enabled) and (not (traefik.tls or traefik.http))
              else true }}"

traefik_subdomain: "{{ lookup('vars', traefik_role_var + '_web_subdomain', default=lookup('vars', role_name + '_web_subdomain', default=omit)) }}"
traefik_domain: "{{ lookup('vars', traefik_role_var + '_web_domain', default=lookup('vars', role_name + '_web_domain', default=omit)) }}"
traefik_router: "{{ lookup('vars', traefik_role_var + '_name', default=lookup('vars', role_name + '_name', default=omit)) }}"

traefik_loadbalancer_port: "{{ lookup('vars', traefik_role_var + '_web_port', default=lookup('vars', role_name + '_web_port', default=omit)) }}"
traefik_loadbalancer_scheme: "{{ lookup('vars', traefik_role_var + '_web_scheme', default=lookup('vars', role_name + '_web_scheme', default=omit)) }}"

traefik_host: "{{ traefik_subdomain + '.' + traefik_domain
               if (traefik_subdomain | length > 0)
               else traefik_domain }}"

################################
# Docker
################################

docker_volumes_downloads_nzbs: "{{ [downloads_usenet_path + ':/downloads/nzbs']
                                if nzbs_downloads_path_is_defined
                                else [] }}"

docker_volumes_downloads_torrents: "{{ [downloads_torrents_path + ':/downloads/torrents']
                                    if torrents_downloads_path_is_defined
                                    else [] }}"

docker_volumes_downloads_common: "{{ docker_volumes_downloads_nzbs + docker_volumes_downloads_torrents
                                  if downloads_custom_path
                                  else [downloads_root_path + ':/downloads'] }}"

docker_volumes_common_folders:
  - "/mnt:/mnt"

docker_volumes_common: "{{ docker_volumes_common_folders + docker_volumes_downloads_common }}"

docker_hosts_common: []

docker_labels_bizbox_tmp:
  - com.github.bizbox.bizbox_managed: "true"

docker_labels_diun_tmp:
  - diun.enable: "true"

docker_labels_bizbox: "{{ docker_labels_bizbox_tmp | combine(docker_labels_diun_tmp)
                        if lookup('vars', role_name + '_diun_enabled', default=true)
                        else docker_labels_bizbox_tmp }}"

docker_labels_traefik_main:
  - traefik.enable: "true"
  - '{ "traefik.http.routers.{{ traefik_router }}-http.entrypoints": "web" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-http.service": "{{ traefik_router }}-http" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-http.rule": "Host(`{{ traefik_host }}`)" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-http.priority": "20" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-http.middlewares": "{{ lookup("vars", traefik_role_var + "_traefik_middleware_http", default=lookup("vars", role_name + "_traefik_middleware_http", default=traefik_default_middleware_http)) }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}.entrypoints": "websecure" }'
  - '{ "traefik.http.routers.{{ traefik_router }}.service": "{{ traefik_router }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}.rule": "Host(`{{ traefik_host }}`)" }'
  - '{ "traefik.http.routers.{{ traefik_router }}.priority": "{{ lookup("vars", traefik_role_var + "_traefik_priority", default=lookup("vars", role_name + "_traefik_priority", default="20")) }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}.tls.certresolver": "{{ lookup("vars", traefik_role_var + "_traefik_certresolver", default=lookup("vars", role_name + "_traefik_certresolver", default=traefik_default_certresolver)) }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}.tls.options": "securetls@file" }'
  - '{ "traefik.http.routers.{{ traefik_router }}.middlewares": "{{ lookup("vars", traefik_role_var + "_traefik_middleware", default=lookup("vars", role_name + "_traefik_middleware", default=omit)) }}" }'
  - '{ "traefik.http.services.{{ traefik_router }}-http.loadbalancer.server.port": "{{ lookup("vars", traefik_role_var + "_web_http_port", default=lookup("vars", role_name + "_web_http_port", default=traefik_loadbalancer_port)) }}" }'
  - '{ "traefik.http.services.{{ traefik_router }}-http.loadbalancer.server.scheme": "{{ lookup("vars", traefik_role_var + "_web_http_scheme", default=lookup("vars", role_name + "_web_http_scheme", default=traefik_loadbalancer_scheme)) }}" }'
  - '{ "traefik.http.services.{{ traefik_router }}-http.loadbalancer.serverstransport": "{{ lookup("vars", traefik_role_var + "_web_http_serverstransport", default=lookup("vars", role_name + "_web_http_serverstransport", default=omit)) }}" }'
  - '{ "traefik.http.services.{{ traefik_router }}.loadbalancer.server.port": "{{ traefik_loadbalancer_port }}" }'
  - '{ "traefik.http.services.{{ traefik_router }}.loadbalancer.server.scheme": "{{ traefik_loadbalancer_scheme }}" }'
  - '{ "traefik.http.services.{{ traefik_router }}.loadbalancer.serverstransport": "{{ lookup("vars", traefik_role_var + "_web_serverstransport", default=lookup("vars", role_name + "_web_serverstransport", default=omit)) }}" }'

docker_labels_traefik_api:
  - '{ "traefik.http.routers.{{ traefik_router }}-api-http.entrypoints": "web" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api-http.service": "{{ traefik_router }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api-http.rule": "(Host(`{{ traefik_host }}`) && PathPrefix({{ lookup("vars", traefik_role_var + "_traefik_api_endpoint", default=lookup("vars", role_name + "_traefik_api_endpoint", default=omit)) }}))" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api-http.priority": "30" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api-http.middlewares": "{{ lookup("vars", traefik_role_var + "_traefik_api_middleware_http", default=lookup("vars", role_name + "_traefik_api_middleware_http", default=traefik_default_middleware_http)) }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api.entrypoints": "websecure" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api.service": "{{ traefik_router }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api.rule": "(Host(`{{ traefik_host }}`) && PathPrefix({{ lookup("vars", traefik_role_var + "_traefik_api_endpoint", default=lookup("vars", role_name + "_traefik_api_endpoint", default=omit)) }}))" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api.priority": "30" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api.tls.certresolver": "{{ lookup("vars", traefik_role_var + "_traefik_certresolver", default=lookup("vars", role_name + "_traefik_certresolver", default=traefik_default_certresolver)) }}" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api.tls.options": "securetls@file" }'
  - '{ "traefik.http.routers.{{ traefik_router }}-api.middlewares": "{{ lookup("vars", traefik_role_var + "_traefik_api_middleware", default=lookup("vars", role_name + "_traefik_api_middleware", default=traefik_default_middleware)) }}" }'

docker_labels_traefik: "{{ docker_labels_traefik_main | combine(docker_labels_traefik_api)
                        if traefik_role_api_enabled
                        else docker_labels_traefik_main }}"

docker_labels_common: "{{ docker_labels_bizbox | combine(docker_labels_traefik)
                       if (traefik_role_enabled and reverse_proxy_is_enabled)
                       else docker_labels_bizbox }}"

docker_networks_name_common: bizbox

docker_networks_common:
  - name: "{{ docker_networks_name_common }}"
    aliases:
      - "{{ lookup('vars', role_name + '_docker_networks_alias') }}"

dockerhub_is_enabled: "{{ (dockerhub is defined) and
                          (dockerhub is not none) and
                          (dockerhub | trim | length > 0) and
                          (dockerhub.user is defined) and
                          (dockerhub.user is not none) and
                          (dockerhub.user | trim | length > 0) and
                          (dockerhub.token is defined) and
                          (dockerhub.token is not none) and
                          (dockerhub.token | trim | length > 0) }}"

docker_log_driver_json: "json-file"

docker_log_driver: "{{ docker_log_driver_json
                    if docker.json_driver
                    else 'default' }}"

docker_log_options_json:
  tag: "{% raw %}'{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'{% endraw %}" # noqa jinja[spacing]

docker_log_options: "{{ docker_log_options_json
                     if docker.json_driver
                     else 'default' }}"

################################
# Cloudbox Version Manager
################################

cvm: https://cvm.bizbox.dev/version?url=

################################
# Global Variables
################################

reboot_is_necessary: false
skip_dns: false
role_dns_enabled: "{{ lookup('vars', role_name + '_dns_enabled', default=true) }}"

################################
# Backup
################################

backup_rclone_transfers: 4
backup_rclone_drive_chunk_size: 128M

reverse_proxy_apps:
  - traefik

torrent_apps:
  - deluge
  - delugevpn
  - qbittorrent
  - qbittorrentvpn
  - rutorrent
  - transmission
  - transmissionvpn
